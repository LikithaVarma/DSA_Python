You are given a string S, and you have to find all the amazing substrings of S.
 An amazing Substring is one that starts with a vowel (a, e, i, o, u, A, E, I, O, U).
 Input
 Only argument given is string S.
 Output
 Return a single integer X mod 10003, here X is the number of Amazing Substrings in given the string.
 Constraints 1 <= length(S) <= 1e6 S can have special characters Example
 Input
 ABEC
 Output
 6
 Explanation Amazing substrings of given string are : 1. A
 2. AB
 3. ABE
 4. ABEC
 5. E
 6. EC
 here number of substrings are 6 and 6 % 10003 = 6.
 
 class Solution:
    # @param A : string
    # @return an integer
    def solve(self, A):
        cnt=0
        ans=0
        #A=A.lower()
        vowel='aeiouAEIOU'
        for i in range(len(A)-1,-1,-1):
            if A[i] in vowel:
            #if i=='a' or i=='e' or i=='i' or i=='o' or i=='u' or i='A'  or i=='E' or i=='I' or i=='O' or i=='U':
                cnt+=1
                ans+=cnt
            else:
                cnt+=1
        return ans%10003
                
