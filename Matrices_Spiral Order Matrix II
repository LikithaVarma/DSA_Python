Problem Description Given an integer A, generate a square matrix filled with elements from 1 to A2 in spiral order.
 Problem Constraints 1 <= A <= 1000 Input Format First and only argument is integer A Output Format Return a 2-D matrix which consists of the elements in spiral order.
 Example Input Input 1: 1
 Input 2: 2
 Example Output Output 1: [ [1] ] Output 2: [ [1, 2], [4, 3] ] Example Explanation Explanation 1: Only 1 is to be arranged.
 Explanation 2: 1 --> 2 |
 |
 4<--- 3
 
 
 class Solution:
    # @param A : integer
    # @return a list of list of integers
    def generateMatrix(self, A):
        n=A
        B=[[0]*A for i in range(A)]
        counter=1
        i,j=0,0
        while n>1:
            for k in range(0,n-1):
                B[i][j]=counter
                counter+=1
                j+=1
            for k in range(0,n-1):
                B[i][j]=counter
                counter+=1
                i+=1
            for k in range(0,n-1):
                B[i][j]=counter
                counter+=1
                j-=1
            for k in range(0,n-1):
                B[i][j]=counter
                counter+=1
                i-=1
            i+=1
            j+=1
            n=n-2
        if A%2!=0:
            B[A//2][A//2]=A*A
        return B

        
        

